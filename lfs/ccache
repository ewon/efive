###############################################################################
# This file is part of the IPCop Firewall.                                    #
#                                                                             #
# IPCop is free software; you can redistribute it and/or modify               #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation; either version 2 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# IPCop is distributed in the hope that it will be useful,                    #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with IPCop; if not, write to the Free Software                        #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA    #
#                                                                             #
# Makefiles are based on LFSMake, which is                                    #
# Copyright (C) 2002 Rod Roard <rod@sunsetsystems.com>                        #
#                                                                             #
# Modifications by:                                                           #
# 17-02-2004 Mark Wormgoor < mark@wormgoor.com>                               #
#          - Modified Makefile for IPCop build                                #
#                                                                             #
# $Id: ccache 5723 2011-07-06 20:23:21Z gespinasse $
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = ccache
VER        = 3.1.5
HOST_ARCH  = all
OTHER_SRC  = yes

THISAPP    = ccache-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DL_FROM    = http://samba.org/ftp/ccache
DIR_APP    = $(DIR_SRC)/$(THISAPP)
TARGET     = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)

PREFIX     = /$(TOOLS_DIR)/usr

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE)

$(DL_FILE) = $(DL_FROM)/$(DL_FILE)

$(DL_FILE)_MD5 = f652bd20253bb4aa1440ae50bea3c9e3

install : $(TARGET)

check : $(patsubst %,$(DIR_CHK)/%,$(objects))

download :$(patsubst %,$(DIR_DL)/%,$(objects))

md5 : $(subst %,%_MD5,$(objects))

###############################################################################
# Downloading, checking, md5sum
###############################################################################

$(patsubst %,$(DIR_CHK)/%,$(objects)) :
	@$(CHECK)

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

$(subst %,%_MD5,$(objects)) :
	@$(MD5)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)

	# to check the build environment,show toolchain_make existing variables
	env

	# Not all toolchain packages are equal to run on every machines
	# Because ccache is compiled static, we inherit the --enable-kernel passed to host glibc
	# for example on debian 5 (lenny), file build_i486/tools_i486/usr/bin/ccache show
	# ELF 32-bit LSB executable ... for GNU/Linux 2.6.8

	# libz will not being detected if libz.h is not installed : bundled zlib will be build
	# ac_cv_func_getpwuid=no allow to not depend on host libc
	# and does not look required : without CCACHE_DIR (that we use), ccache write stats in HOME
	cd $(DIR_APP) && CFLAGS="-O2 -static" ac_cv_func_getpwuid=no ./configure --prefix=$(PREFIX)
	cd $(DIR_APP) && make
	cd $(DIR_APP) && make install
	ln -sf ccache $(PREFIX)/bin/gcc
	ln -sf ccache $(PREFIX)/bin/g++
	ln -sf ccache $(PREFIX)/bin/cc
	ln -sf ccache $(PREFIX)/bin/c++
	# triplet symlinks will be created later once gcc is compiled.
	# This is required when configure is used with --build

	# To find which size is needed, set first a max-size bigger than required. Then run
	# ./make.sh ccache_clean && ./make.sh clean && ./make.sh toolchain && ./make.sh build
	# Look at 'cache size' for the last package in ccache-stats.log
	# Running test add less than 10% in cache size but more time.
	# When near max-size, old hit are removed until 15% lower than max, so add at least 15%
	# The 25/01/2011, I find 1.1 G size (with tests run )
	$(PREFIX)/bin/ccache --max-size 1.5 G

	@rm -rf $(DIR_APP)
	@$(POSTBUILD)
